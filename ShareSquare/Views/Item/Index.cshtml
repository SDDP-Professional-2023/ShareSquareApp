@model List<Item>

@{
    ViewData["Title"] = "Items";
}

@{
    var conditions = new string[] { "Excellent", "Very good", "Good" };
}
<div class="itemTitle">
<h1>List of Items</h1></div>

<div class="row">
    <div class="col-md-3 ml-4 first-col">
        <div class="col-container">


        <div class="mb-3 top-first">
            <label>Start Year</label>
            <select id="startYear" class="form-control">
                @for (int year = 2000; year <= 2023; year++)
                {
                    <option value="@year">@year</option>
                }
            </select>
        </div>

        <div class="mb-3">
            <label>End Year</label>
            <select id="endYear" class="form-control">
                @for (int year = 2000; year <= 2023; year++)
                {
                    <option value="@year">@year</option>
                }
            </select>
            <div class="text-danger" id="yearValidationError" style="display:none;">Start Year should be less than or equal to End Year.</div>
        </div>


        <div class="mb-3">
            <label>Language</label>
            <input type="text" id="language" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Condition</label>
            <select id="condition" class="form-control">
                @foreach (var condition in conditions)
                {
                    <option value="@condition">@condition</option>
                }
            </select>
        </div>

        <div class="mb-3">
            <label>Price</label>
            <input type="text" id="price" class="form-control" />
        </div>

        <div class="mt-3">
            <div class="form-check">
                <input class="form-check-input" type="radio" name="category" id="all" value="all" checked>
                <label class="form-check-label" for="all">
                    All
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="category" id="book" value="book">
                <label class="form-check-label" for="book">
                    Books
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="category" id="game" value="game">
                <label class="form-check-label" for="game">
                    Games
                </label>
            </div>
        </div>

        <button type="button" class="btn btn-primary" id="filter-btn">Filter</button>
        <button type="button" class="btn btn-secondary" id="clear-filter-btn" style="display: none;">Clear Filter</button>
        </div>
    </div>


    <div class="col-md-9 sor second-col " id="second-col ">
        <button class="btn  sort-btn" id="price-asc-btn" data-sort="price" data-sort-order="asc">Sort by Price Asc</button>
        <button class="btn  sort-btn" id="price-desc-btn" data-sort="price" data-sort-order="desc">Sort by Price Desc</button>
        <button class="btn btn-custom sort-btn" id="year-asc-btn" data-sort="year" data-sort-order="asc">Sort by Year Asc</button>
        <button class="btn y sort-btn" id="year-desc-btn" data-sort="year" data-sort-order="desc">Sort by Year Desc</button>
        <button class="btn btn-secondary" id="clear-sort" style="display: none;">Clear Sort</button>

        @if (Model.Count == 0)
        {
            <h3 class="text-center">There are no items. Try using the filter.</h3>
        }
        else
        {
            <div>

                <div class="card-container">
                    <div class="row row-cols-1 row-cols-md-3 g-4 itemsList" id="itemsTable">

                    @foreach (var item in Model)
                    {
                        var image = item.ImageUrl;
                        if (image != null && !image.StartsWith('h'))
                        {
                            image = "~/Images/" + image;
                        }

                   
                       
                        <div class="card h-100  @item.ItemType.ToLower()" style="width: 20rem; height:30rem;" data-year="@item.PublicationYearOrReleaseYear" data-language="@item.Language" data-condition="@item.Condition" data-price="@item.Price">
                            <img src="@image" style="height: 12rem;" alt="Item image" asp-append-version="true" class="card-img-top">
                            <div class="card-body ">
                                <h5 class="card-title">@item.Title</h5>
                                <p class="card-text card-description">@item.Description</p>
                                <p class="card-text">@item.PublicationYearOrReleaseYear</p>
                                <p class="card-text">&pound;@item.Price</p>
                                <a asp-action="Details" asp-controller="Item" asp-route-id="@item.ItemId" role="button" class="btn btn-primary btn-block">
                                    View
                                </a>
                            </div>
                        </div>
                    }

                    </div>
                </div>

            </div>
        }
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            // For sorting
            $('.sort-btn').click(function (event) {
                var sortKey = $(this).data('sort');
                var sortOrder = $(this).data('sort-order');
                sortTable(sortKey, sortOrder);
                activateButton(sortKey, sortOrder);
            });

            $('#clear-sort').click(function () {
                location.reload();
            });

            function activateButton(sortKey, sortOrder) {
                ['price-asc-btn', 'price-desc-btn', 'year-asc-btn', 'year-desc-btn'].forEach(function (btnId) {
                    $('#' + btnId).prop('disabled', false);
                });

                $('#' + sortKey + '-' + sortOrder + '-btn').prop('disabled', true);
                $('#clear-sort').css('display', 'inline-block');
            }

            function sortTable(sortKey, sortOrder) {
                var cards = $('#itemsTable .card').toArray();
                cards.sort(function (a, b) {
                    var valA = $(a).data(sortKey);
                    var valB = $(b).data(sortKey);

                    if (sortOrder === 'asc') {
                        return valA > valB ? 1 : (valA < valB ? -1 : 0);
                    } else {
                        return valA < valB ? 1 : (valA > valB ? -1 : 0);
                    }
                });

                cards.forEach(function (card) {
                    $('#itemsTable').append(card);
                });
            }

            // For filtering
            $('#filter-btn').click(function () {
                let startYear = parseInt($('#startYear').val());
                let endYear = parseInt($('#endYear').val());

                if (startYear > endYear) {
                    $('#yearValidationError').show();
                    return;
                } else {
                    $('#yearValidationError').hide();
                }

                let language = $('#language').val().toLowerCase();
                let condition = $('#condition').val().toLowerCase();
                let price = parseFloat($('#price').val());
                let category = $('input[name="category"]:checked').val();

                $('#itemsTable .card').each(function () {
                    let itemYear = $(this).data('year');
                    let itemLanguage = $(this).data('language').toLowerCase();
                    let itemCondition = $(this).data('condition').toLowerCase();
                    let itemPrice = parseFloat($(this).data('price'));

                    if ((category === 'all' || $(this).hasClass(category)) &&
                        (!startYear || itemYear >= startYear) &&
                        (!endYear || itemYear <= endYear) &&
                        (!language || itemLanguage.includes(language)) &&
                        (!condition || itemCondition.includes(condition)) &&
                        (!price || itemPrice <= price)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });

                $('#clear-filter-btn').show();
            });

            $('#clear-filter-btn').click(function () {
                $('#startYear').val('');
                $('#endYear').val('');
                $('#language').val('');
                $('#condition').val('');
                $('#price').val('');
                $('input[name="category"]').prop('checked', false);
                $('#all').prop('checked', true);

                $('#itemsTable .card').show();
                $('#yearValidationError').hide();
                $(this).hide();
            });
        });

    </script>
}


