@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<ul class="navbar-nav">

    @*checks if user is signed in*@
    @if(SignInManager.IsSignedIn(User))
    {

        var roles = await UserManager.GetRolesAsync(UserManager.GetUserAsync(User).Result);
        if (!roles.Contains("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link" asp-controller="FavoriteItem" asp-action="Index"><i class="bi bi-bookmark"></i> Saved Items</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Message" asp-action="Index"><i class="bi bi-envelope"></i> Messages</a>
            </li>
        } else
        {
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="GetUsers"><i class="bi bi-bookmark"></i>Users</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="GetItems"><i class="bi bi-bookmark"></i>Items</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="GetErrors"><i class="bi bi-bookmark"></i>Errors</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="GetReview"><i class="bi bi-bookmark"></i>Reviews</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="GetMessages"><i class="bi bi-bookmark"></i>Messages</a>
            </li>
        }

        <li class="dropdown">
            <a class="btn dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @UserManager.GetUserName(User)
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @if (!roles.Contains("Admin"))
                {
                    <a class="dropdown-item" asp-controller="Account" asp-action="EditProfile">Account Profile</a>
                    <a class="dropdown-item" asp-controller="UserItems" asp-action="Index">Manage User Listings</a>
                    <div class="dropdown-divider"></div>
                    <form method="post" asp-controller="Account" asp-action="Logout">
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                } else
                {
                    <form method="post" asp-controller="Admin" asp-action="Logout">
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                }

            </div>
        </li>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
        </li>

        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>


@if(SignInManager.IsSignedIn(User))
{

    var roles = await UserManager.GetRolesAsync(UserManager.GetUserAsync(User).Result);
    if (!roles.Contains("Admin"))
    {
        <a asp-controller="Item" asp-action="Create" class="btn btn-secondary" style="width:120px">
        List Item
        </a>
    }
}

@section Scripts {
    
}



